#!/usr/bin/env perl

use Mojolicious::Lite;
use DBI;

# Documentation browser under "/perldoc"
plugin 'PODRenderer';

my $dbh = DBI->connect('dbi:Pg:dbname=zipcodes','trayton','', {AutoCommit => 1})
    or die "Could not connect to database.";

# add helper methods for interacting with the db
helper db => sub { $dbh };

helper selectzips => sub {
    my $self = shift;
    my ($zipcode, $radius, $units) = @_;
    if ($units eq 'miles') {
        $radius *= 1.60934;
    }
    my $sth = eval { $self->db->prepare('select zip, lat, lon,
            ?::real as radius,
            \'km\' as units
            from ziplatlon where zip = ?') }
        || return undef;
    $sth->execute($radius, $zipcode);
    return $sth->fetchall_arrayref;
};

helper distancecalc => sub {
    my $self = shift;
    my ($zipcode, )
};

any '/' => sub {
    my $self    = shift;
    my $zipcode = $self->param('zipcode');
    my $radius  = $self->param('radius');
    my $units   = $self->param('units');
    my $rows    = $self->selectzips($zipcode, $radius, $units);
    $self->stash( rows => $rows );
    $self->render('index');
};

app->start;

__DATA__

@@ index.html.ep
% layout 'default';
% title 'Zip Code Radius Calculator';
<form action="<%=url_for('')->to_abs%>" method="post">
    Zip Code:   <input type="text" name="zipcode">
    <br>
    Radius:     <input type="text" name="radius">
    <br>
    Units:      <input type="radio" name="units" value="km"> km
                <input type="radio" name="units" value="miles"> miles
    <br>
                <input type="submit" value="Calculate">
</form>
<br>
Zip Code:
<br>
<table border="1">
    <tr>
        <th>Zip Code</th>
        <th>Latitude</th>
        <th>Longitude</th>
        <th>Radius</th>
        <th>Units</th>
    </tr>
    % for my $row (@$rows) {
    <tr>
        % for my $text (@$row) {
            <td><%= $text %></td>
        % }
    % }
</table>

@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head><title><%= title %></title></head>
  <body><%= content %></body>
</html>
